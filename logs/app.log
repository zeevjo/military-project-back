2025-01-11 15:37:17 INFO  [main] org.example.MainServer - Server is running on http://localhost:8080
2025-01-11 15:37:23 INFO  [pool-2-thread-2] org.example.controllers.LoginController - Received login request
2025-01-11 15:37:23 INFO  [pool-2-thread-2] org.example.services.LoginService - Processing login request for user: admin
2025-01-11 15:37:23 INFO  [pool-2-thread-2] org.example.repositories.LoginRepository - Attempting to log in user: admin
2025-01-11 15:37:23 INFO  [pool-2-thread-2] org.example.db.DatabaseConnection - Attempting to establish the DB
2025-01-11 15:37:24 INFO  [pool-2-thread-2] org.example.db.DatabaseConnection - Database connection established successfully.
2025-01-11 15:37:24 INFO  [pool-2-thread-2] org.example.services.LoginService - Login result for user admin: Invalid username or password
2025-01-11 15:37:24 INFO  [pool-2-thread-2] org.example.controllers.LoginController - Sending response with status 200 and body: {"message":"Invalid username or password"}
2025-01-11 15:37:24 INFO  [pool-2-thread-2] org.example.controllers.LoginController - Response sent successfully
2025-01-11 15:50:45 INFO  [main] org.example.MainServer - Server is running on http://localhost:8080
2025-01-11 15:50:47 INFO  [pool-2-thread-2] org.example.controllers.LoginController - Received login request
2025-01-11 15:50:47 INFO  [pool-2-thread-2] org.example.services.LoginService - Processing login request for user: admin
2025-01-11 15:50:47 INFO  [pool-2-thread-2] org.example.repositories.LoginRepository - Attempting to log in user: admin
2025-01-11 15:50:47 INFO  [pool-2-thread-2] org.example.db.DatabaseConnection - Attempting to establish the DB
2025-01-11 15:50:48 INFO  [pool-2-thread-2] org.example.db.DatabaseConnection - Database connection established successfully.
2025-01-11 15:50:48 ERROR [pool-2-thread-2] org.example.repositories.LoginRepository - Error executing Login procedure: Column 'Message' not found.
java.sql.SQLException: Column 'Message' not found.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:98) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:90) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:64) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.result.ResultSetImpl.findColumn(ResultSetImpl.java:584) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.result.ResultSetImpl.getString(ResultSetImpl.java:896) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at org.example.repositories.LoginRepository.loginUser(LoginRepository.java:29) ~[classes/:?]
	at org.example.services.LoginService.login(LoginService.java:19) ~[classes/:?]
	at org.example.controllers.LoginController.login(LoginController.java:35) ~[classes/:?]
	at org.example.router.Router.lambda$wrap$1(Router.java:56) ~[classes/:?]
	at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:98) ~[jdk.httpserver:?]
	at sun.net.httpserver.AuthFilter.doFilter(AuthFilter.java:82) ~[jdk.httpserver:?]
	at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:101) ~[jdk.httpserver:?]
	at sun.net.httpserver.ServerImpl$Exchange$LinkHandler.handle(ServerImpl.java:873) ~[jdk.httpserver:?]
	at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:98) ~[jdk.httpserver:?]
	at sun.net.httpserver.ServerImpl$Exchange.run(ServerImpl.java:849) ~[jdk.httpserver:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[?:?]
	at java.lang.Thread.run(Thread.java:1575) [?:?]
2025-01-11 15:50:48 ERROR [pool-2-thread-2] org.example.controllers.LoginController - Error processing login request: Database error during login
java.lang.RuntimeException: Database error during login
	at org.example.repositories.LoginRepository.loginUser(LoginRepository.java:35) ~[classes/:?]
	at org.example.services.LoginService.login(LoginService.java:19) ~[classes/:?]
	at org.example.controllers.LoginController.login(LoginController.java:35) ~[classes/:?]
	at org.example.router.Router.lambda$wrap$1(Router.java:56) ~[classes/:?]
	at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:98) ~[jdk.httpserver:?]
	at sun.net.httpserver.AuthFilter.doFilter(AuthFilter.java:82) ~[jdk.httpserver:?]
	at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:101) ~[jdk.httpserver:?]
	at sun.net.httpserver.ServerImpl$Exchange$LinkHandler.handle(ServerImpl.java:873) ~[jdk.httpserver:?]
	at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:98) ~[jdk.httpserver:?]
	at sun.net.httpserver.ServerImpl$Exchange.run(ServerImpl.java:849) ~[jdk.httpserver:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[?:?]
	at java.lang.Thread.run(Thread.java:1575) [?:?]
Caused by: java.sql.SQLException: Column 'Message' not found.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:98) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:90) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:64) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.result.ResultSetImpl.findColumn(ResultSetImpl.java:584) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.result.ResultSetImpl.getString(ResultSetImpl.java:896) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at org.example.repositories.LoginRepository.loginUser(LoginRepository.java:29) ~[classes/:?]
	... 12 more
2025-01-11 15:50:48 INFO  [pool-2-thread-2] org.example.controllers.LoginController - Sending response with status 500 and body: {"error":"Internal server error"}
2025-01-11 15:50:48 INFO  [pool-2-thread-2] org.example.controllers.LoginController - Response sent successfully
2025-01-11 15:50:50 INFO  [pool-2-thread-3] org.example.controllers.LoginController - Received login request
2025-01-11 15:50:50 INFO  [pool-2-thread-3] org.example.services.LoginService - Processing login request for user: admin
2025-01-11 15:50:50 INFO  [pool-2-thread-3] org.example.repositories.LoginRepository - Attempting to log in user: admin
2025-01-11 15:50:50 INFO  [pool-2-thread-3] org.example.db.DatabaseConnection - Attempting to establish the DB
2025-01-11 15:50:50 INFO  [pool-2-thread-3] org.example.db.DatabaseConnection - Database connection established successfully.
2025-01-11 15:50:50 ERROR [pool-2-thread-3] org.example.repositories.LoginRepository - Error executing Login procedure: Column 'Message' not found.
java.sql.SQLException: Column 'Message' not found.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:98) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:90) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:64) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.result.ResultSetImpl.findColumn(ResultSetImpl.java:584) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.result.ResultSetImpl.getString(ResultSetImpl.java:896) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at org.example.repositories.LoginRepository.loginUser(LoginRepository.java:29) ~[classes/:?]
	at org.example.services.LoginService.login(LoginService.java:19) ~[classes/:?]
	at org.example.controllers.LoginController.login(LoginController.java:35) ~[classes/:?]
	at org.example.router.Router.lambda$wrap$1(Router.java:56) ~[classes/:?]
	at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:98) ~[jdk.httpserver:?]
	at sun.net.httpserver.AuthFilter.doFilter(AuthFilter.java:82) ~[jdk.httpserver:?]
	at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:101) ~[jdk.httpserver:?]
	at sun.net.httpserver.ServerImpl$Exchange$LinkHandler.handle(ServerImpl.java:873) ~[jdk.httpserver:?]
	at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:98) ~[jdk.httpserver:?]
	at sun.net.httpserver.ServerImpl$Exchange.run(ServerImpl.java:849) ~[jdk.httpserver:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[?:?]
	at java.lang.Thread.run(Thread.java:1575) [?:?]
2025-01-11 15:50:50 ERROR [pool-2-thread-3] org.example.controllers.LoginController - Error processing login request: Database error during login
java.lang.RuntimeException: Database error during login
	at org.example.repositories.LoginRepository.loginUser(LoginRepository.java:35) ~[classes/:?]
	at org.example.services.LoginService.login(LoginService.java:19) ~[classes/:?]
	at org.example.controllers.LoginController.login(LoginController.java:35) ~[classes/:?]
	at org.example.router.Router.lambda$wrap$1(Router.java:56) ~[classes/:?]
	at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:98) ~[jdk.httpserver:?]
	at sun.net.httpserver.AuthFilter.doFilter(AuthFilter.java:82) ~[jdk.httpserver:?]
	at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:101) ~[jdk.httpserver:?]
	at sun.net.httpserver.ServerImpl$Exchange$LinkHandler.handle(ServerImpl.java:873) ~[jdk.httpserver:?]
	at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:98) ~[jdk.httpserver:?]
	at sun.net.httpserver.ServerImpl$Exchange.run(ServerImpl.java:849) ~[jdk.httpserver:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[?:?]
	at java.lang.Thread.run(Thread.java:1575) [?:?]
Caused by: java.sql.SQLException: Column 'Message' not found.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:98) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:90) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:64) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.result.ResultSetImpl.findColumn(ResultSetImpl.java:584) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.result.ResultSetImpl.getString(ResultSetImpl.java:896) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at org.example.repositories.LoginRepository.loginUser(LoginRepository.java:29) ~[classes/:?]
	... 12 more
2025-01-11 15:50:50 INFO  [pool-2-thread-3] org.example.controllers.LoginController - Sending response with status 500 and body: {"error":"Internal server error"}
2025-01-11 15:50:50 INFO  [pool-2-thread-3] org.example.controllers.LoginController - Response sent successfully
2025-01-11 15:52:36 INFO  [main] org.example.MainServer - Server is running on http://localhost:8080
2025-01-11 15:52:40 INFO  [pool-2-thread-2] org.example.controllers.LoginController - Received login request
2025-01-11 15:52:40 INFO  [pool-2-thread-2] org.example.services.LoginService - Processing login request for user: admin
2025-01-11 15:52:40 INFO  [pool-2-thread-2] org.example.repositories.LoginRepository - Attempting to log in user: admin
2025-01-11 15:52:40 INFO  [pool-2-thread-2] org.example.db.DatabaseConnection - Attempting to establish the DB
2025-01-11 15:52:41 INFO  [pool-2-thread-2] org.example.db.DatabaseConnection - Database connection established successfully.
2025-01-11 15:52:41 ERROR [pool-2-thread-2] org.example.repositories.LoginRepository - Error executing Login procedure: Table 'militarydb_1.users' doesn't exist
java.sql.SQLSyntaxErrorException: Table 'militarydb_1.users' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:972) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.CallableStatement.executeQuery(CallableStatement.java:891) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at org.example.repositories.LoginRepository.loginUser(LoginRepository.java:27) ~[classes/:?]
	at org.example.services.LoginService.login(LoginService.java:19) ~[classes/:?]
	at org.example.controllers.LoginController.login(LoginController.java:35) ~[classes/:?]
	at org.example.router.Router.lambda$wrap$1(Router.java:56) ~[classes/:?]
	at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:98) ~[jdk.httpserver:?]
	at sun.net.httpserver.AuthFilter.doFilter(AuthFilter.java:82) ~[jdk.httpserver:?]
	at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:101) ~[jdk.httpserver:?]
	at sun.net.httpserver.ServerImpl$Exchange$LinkHandler.handle(ServerImpl.java:873) ~[jdk.httpserver:?]
	at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:98) ~[jdk.httpserver:?]
	at sun.net.httpserver.ServerImpl$Exchange.run(ServerImpl.java:849) ~[jdk.httpserver:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[?:?]
	at java.lang.Thread.run(Thread.java:1575) [?:?]
2025-01-11 15:52:41 ERROR [pool-2-thread-2] org.example.controllers.LoginController - Error processing login request: Database error during login
java.lang.RuntimeException: Database error during login
	at org.example.repositories.LoginRepository.loginUser(LoginRepository.java:35) ~[classes/:?]
	at org.example.services.LoginService.login(LoginService.java:19) ~[classes/:?]
	at org.example.controllers.LoginController.login(LoginController.java:35) ~[classes/:?]
	at org.example.router.Router.lambda$wrap$1(Router.java:56) ~[classes/:?]
	at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:98) ~[jdk.httpserver:?]
	at sun.net.httpserver.AuthFilter.doFilter(AuthFilter.java:82) ~[jdk.httpserver:?]
	at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:101) ~[jdk.httpserver:?]
	at sun.net.httpserver.ServerImpl$Exchange$LinkHandler.handle(ServerImpl.java:873) ~[jdk.httpserver:?]
	at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:98) ~[jdk.httpserver:?]
	at sun.net.httpserver.ServerImpl$Exchange.run(ServerImpl.java:849) ~[jdk.httpserver:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[?:?]
	at java.lang.Thread.run(Thread.java:1575) [?:?]
Caused by: java.sql.SQLSyntaxErrorException: Table 'militarydb_1.users' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:972) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.CallableStatement.executeQuery(CallableStatement.java:891) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at org.example.repositories.LoginRepository.loginUser(LoginRepository.java:27) ~[classes/:?]
	... 12 more
2025-01-11 15:52:41 INFO  [pool-2-thread-2] org.example.controllers.LoginController - Sending response with status 500 and body: {"error":"Internal server error"}
2025-01-11 15:52:41 INFO  [pool-2-thread-2] org.example.controllers.LoginController - Response sent successfully
2025-01-11 15:52:49 INFO  [main] org.example.MainServer - Server is running on http://localhost:8080
2025-01-11 15:52:52 INFO  [pool-2-thread-2] org.example.controllers.LoginController - Received login request
2025-01-11 15:52:53 INFO  [pool-2-thread-2] org.example.services.LoginService - Processing login request for user: admin
2025-01-11 15:52:53 INFO  [pool-2-thread-2] org.example.repositories.LoginRepository - Attempting to log in user: admin
2025-01-11 15:52:53 INFO  [pool-2-thread-2] org.example.db.DatabaseConnection - Attempting to establish the DB
2025-01-11 15:52:53 INFO  [pool-2-thread-2] org.example.db.DatabaseConnection - Database connection established successfully.
2025-01-11 15:52:53 ERROR [pool-2-thread-2] org.example.repositories.LoginRepository - Error executing Login procedure: Table 'militarydb_1.users' doesn't exist
java.sql.SQLSyntaxErrorException: Table 'militarydb_1.users' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:972) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.CallableStatement.executeQuery(CallableStatement.java:891) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at org.example.repositories.LoginRepository.loginUser(LoginRepository.java:27) ~[classes/:?]
	at org.example.services.LoginService.login(LoginService.java:19) ~[classes/:?]
	at org.example.controllers.LoginController.login(LoginController.java:35) ~[classes/:?]
	at org.example.router.Router.lambda$wrap$1(Router.java:56) ~[classes/:?]
	at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:98) ~[jdk.httpserver:?]
	at sun.net.httpserver.AuthFilter.doFilter(AuthFilter.java:82) ~[jdk.httpserver:?]
	at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:101) ~[jdk.httpserver:?]
	at sun.net.httpserver.ServerImpl$Exchange$LinkHandler.handle(ServerImpl.java:873) ~[jdk.httpserver:?]
	at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:98) ~[jdk.httpserver:?]
	at sun.net.httpserver.ServerImpl$Exchange.run(ServerImpl.java:849) ~[jdk.httpserver:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[?:?]
	at java.lang.Thread.run(Thread.java:1575) [?:?]
2025-01-11 15:52:53 ERROR [pool-2-thread-2] org.example.controllers.LoginController - Error processing login request: Database error during login
java.lang.RuntimeException: Database error during login
	at org.example.repositories.LoginRepository.loginUser(LoginRepository.java:35) ~[classes/:?]
	at org.example.services.LoginService.login(LoginService.java:19) ~[classes/:?]
	at org.example.controllers.LoginController.login(LoginController.java:35) ~[classes/:?]
	at org.example.router.Router.lambda$wrap$1(Router.java:56) ~[classes/:?]
	at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:98) ~[jdk.httpserver:?]
	at sun.net.httpserver.AuthFilter.doFilter(AuthFilter.java:82) ~[jdk.httpserver:?]
	at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:101) ~[jdk.httpserver:?]
	at sun.net.httpserver.ServerImpl$Exchange$LinkHandler.handle(ServerImpl.java:873) ~[jdk.httpserver:?]
	at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:98) ~[jdk.httpserver:?]
	at sun.net.httpserver.ServerImpl$Exchange.run(ServerImpl.java:849) ~[jdk.httpserver:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[?:?]
	at java.lang.Thread.run(Thread.java:1575) [?:?]
Caused by: java.sql.SQLSyntaxErrorException: Table 'militarydb_1.users' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:972) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.CallableStatement.executeQuery(CallableStatement.java:891) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at org.example.repositories.LoginRepository.loginUser(LoginRepository.java:27) ~[classes/:?]
	... 12 more
2025-01-11 15:52:53 INFO  [pool-2-thread-2] org.example.controllers.LoginController - Sending response with status 500 and body: {"error":"Internal server error"}
2025-01-11 15:52:53 INFO  [pool-2-thread-2] org.example.controllers.LoginController - Response sent successfully
2025-01-11 16:04:14 INFO  [main] org.example.MainServer - Server is running on http://localhost:8080
2025-01-11 16:04:18 INFO  [pool-2-thread-2] org.example.controllers.LoginController - Received login request
2025-01-11 16:04:18 INFO  [pool-2-thread-2] org.example.services.LoginService - Processing login request for user: admin
2025-01-11 16:04:18 INFO  [pool-2-thread-2] org.example.repositories.LoginRepository - Attempting to log in user: admin
2025-01-11 16:04:18 INFO  [pool-2-thread-2] org.example.db.DatabaseConnection - Attempting to establish the DB
2025-01-11 16:04:19 INFO  [pool-2-thread-2] org.example.db.DatabaseConnection - Database connection established successfully.
2025-01-11 16:04:19 INFO  [pool-2-thread-2] org.example.services.LoginService - Login result for user admin: Login successful
2025-01-11 16:04:19 INFO  [pool-2-thread-2] org.example.controllers.LoginController - Sending response with status 200 and body: {"message":"Login successful"}
2025-01-11 16:04:19 INFO  [pool-2-thread-2] org.example.controllers.LoginController - Response sent successfully
2025-01-11 16:04:24 INFO  [pool-2-thread-3] org.example.controllers.LoginController - Received login request
2025-01-11 16:04:24 INFO  [pool-2-thread-3] org.example.services.LoginService - Processing login request for user: admin
2025-01-11 16:04:24 INFO  [pool-2-thread-3] org.example.repositories.LoginRepository - Attempting to log in user: admin
2025-01-11 16:04:24 INFO  [pool-2-thread-3] org.example.db.DatabaseConnection - Attempting to establish the DB
2025-01-11 16:04:24 INFO  [pool-2-thread-3] org.example.db.DatabaseConnection - Database connection established successfully.
2025-01-11 16:04:24 INFO  [pool-2-thread-3] org.example.services.LoginService - Login result for user admin: Invalid username or password
2025-01-11 16:04:24 INFO  [pool-2-thread-3] org.example.controllers.LoginController - Sending response with status 200 and body: {"message":"Invalid username or password"}
2025-01-11 16:04:24 INFO  [pool-2-thread-3] org.example.controllers.LoginController - Response sent successfully
2025-01-11 16:04:55 INFO  [pool-2-thread-4] org.example.controllers.InventoryController - Received request to fetch item details
2025-01-11 16:04:55 INFO  [pool-2-thread-4] org.example.controllers.InventoryController - Fetching details for stock ID: 1
2025-01-11 16:04:55 INFO  [pool-2-thread-4] org.example.services.InventoryService - Fetching item details from repository for stock ID: 1
2025-01-11 16:04:55 INFO  [pool-2-thread-4] org.example.repositories.InventoryRepository - Fetching item details for stock ID: 1
2025-01-11 16:04:55 INFO  [pool-2-thread-4] org.example.db.DatabaseConnection - Attempting to establish the DB
2025-01-11 16:04:55 INFO  [pool-2-thread-4] org.example.db.DatabaseConnection - Database connection established successfully.
2025-01-11 16:04:55 ERROR [pool-2-thread-4] org.example.repositories.InventoryRepository - SQL Error while retrieving item details for stock ID 1: Unknown column 'ps.Status' in 'field list'
java.sql.SQLSyntaxErrorException: Unknown column 'ps.Status' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:972) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.CallableStatement.executeQuery(CallableStatement.java:891) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at org.example.repositories.InventoryRepository.findItemDetailsByStockId(InventoryRepository.java:48) ~[classes/:?]
	at org.example.services.InventoryService.getItemDetailsByStockId(InventoryService.java:28) ~[classes/:?]
	at org.example.controllers.InventoryController.getItemDetails(InventoryController.java:80) ~[classes/:?]
	at org.example.router.Router.lambda$wrap$1(Router.java:56) ~[classes/:?]
	at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:98) ~[jdk.httpserver:?]
	at sun.net.httpserver.AuthFilter.doFilter(AuthFilter.java:82) ~[jdk.httpserver:?]
	at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:101) ~[jdk.httpserver:?]
	at sun.net.httpserver.ServerImpl$Exchange$LinkHandler.handle(ServerImpl.java:873) ~[jdk.httpserver:?]
	at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:98) ~[jdk.httpserver:?]
	at sun.net.httpserver.ServerImpl$Exchange.run(ServerImpl.java:849) ~[jdk.httpserver:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[?:?]
	at java.lang.Thread.run(Thread.java:1575) [?:?]
2025-01-11 16:04:55 WARN  [pool-2-thread-4] org.example.services.InventoryService - No item details found for stock ID: 1
2025-01-11 16:04:55 INFO  [pool-2-thread-4] org.example.controllers.InventoryController - Sending response with status 200 and body: {"error":"Item not found for stock ID: 1"}
2025-01-11 16:04:55 INFO  [pool-2-thread-4] org.example.controllers.InventoryController - Response sent successfully
2025-01-11 16:21:55 INFO  [pool-2-thread-6] org.example.controllers.InventoryController - Received request to fetch item details
2025-01-11 16:21:55 INFO  [pool-2-thread-6] org.example.controllers.InventoryController - Fetching details for stock ID: 1
2025-01-11 16:21:55 INFO  [pool-2-thread-6] org.example.services.InventoryService - Fetching item details from repository for stock ID: 1
2025-01-11 16:21:55 INFO  [pool-2-thread-6] org.example.repositories.InventoryRepository - Fetching item details for stock ID: 1
2025-01-11 16:21:55 INFO  [pool-2-thread-6] org.example.db.DatabaseConnection - Attempting to establish the DB
2025-01-11 16:21:55 INFO  [pool-2-thread-6] org.example.db.DatabaseConnection - Database connection established successfully.
2025-01-11 16:21:55 ERROR [pool-2-thread-6] org.example.repositories.InventoryRepository - SQL Error while retrieving item details for stock ID 1: Unknown column 'ps.Status' in 'field list'
java.sql.SQLSyntaxErrorException: Unknown column 'ps.Status' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:972) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.CallableStatement.executeQuery(CallableStatement.java:891) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at org.example.repositories.InventoryRepository.findItemDetailsByStockId(InventoryRepository.java:48) ~[classes/:?]
	at org.example.services.InventoryService.getItemDetailsByStockId(InventoryService.java:28) ~[classes/:?]
	at org.example.controllers.InventoryController.getItemDetails(InventoryController.java:80) ~[classes/:?]
	at org.example.router.Router.lambda$wrap$1(Router.java:56) ~[classes/:?]
	at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:98) ~[jdk.httpserver:?]
	at sun.net.httpserver.AuthFilter.doFilter(AuthFilter.java:82) ~[jdk.httpserver:?]
	at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:101) ~[jdk.httpserver:?]
	at sun.net.httpserver.ServerImpl$Exchange$LinkHandler.handle(ServerImpl.java:873) ~[jdk.httpserver:?]
	at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:98) ~[jdk.httpserver:?]
	at sun.net.httpserver.ServerImpl$Exchange.run(ServerImpl.java:849) ~[jdk.httpserver:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[?:?]
	at java.lang.Thread.run(Thread.java:1575) [?:?]
2025-01-11 16:21:55 WARN  [pool-2-thread-6] org.example.services.InventoryService - No item details found for stock ID: 1
2025-01-11 16:21:55 INFO  [pool-2-thread-6] org.example.controllers.InventoryController - Sending response with status 200 and body: {"error":"Item not found for stock ID: 1"}
2025-01-11 16:21:55 INFO  [pool-2-thread-6] org.example.controllers.InventoryController - Response sent successfully
2025-01-11 16:30:33 INFO  [pool-2-thread-8] org.example.controllers.InventoryController - Received request to fetch item details
2025-01-11 16:30:33 INFO  [pool-2-thread-8] org.example.controllers.InventoryController - Fetching details for stock ID: 1
2025-01-11 16:30:33 INFO  [pool-2-thread-8] org.example.services.InventoryService - Fetching item details from repository for stock ID: 1
2025-01-11 16:30:33 INFO  [pool-2-thread-8] org.example.repositories.InventoryRepository - Fetching item details for stock ID: 1
2025-01-11 16:30:33 INFO  [pool-2-thread-8] org.example.db.DatabaseConnection - Attempting to establish the DB
2025-01-11 16:30:33 INFO  [pool-2-thread-8] org.example.db.DatabaseConnection - Database connection established successfully.
2025-01-11 16:30:33 INFO  [pool-2-thread-8] org.example.repositories.InventoryRepository - Successfully retrieved item details for stock ID: 1
2025-01-11 16:30:33 WARN  [pool-2-thread-8] org.example.services.InventoryService - No item details found for stock ID: 1
2025-01-11 16:30:33 INFO  [pool-2-thread-8] org.example.controllers.InventoryController - Sending response with status 200 and body: {"error":"Item not found for stock ID: 1"}
2025-01-11 16:30:33 INFO  [pool-2-thread-8] org.example.controllers.InventoryController - Response sent successfully
2025-01-11 16:30:40 INFO  [main] org.example.MainServer - Server is running on http://localhost:8080
2025-01-11 16:30:43 INFO  [pool-2-thread-2] org.example.controllers.InventoryController - Received request to fetch item details
2025-01-11 16:30:43 INFO  [pool-2-thread-2] org.example.controllers.InventoryController - Fetching details for stock ID: 1
2025-01-11 16:30:43 INFO  [pool-2-thread-2] org.example.services.InventoryService - Fetching item details from repository for stock ID: 1
2025-01-11 16:30:43 INFO  [pool-2-thread-2] org.example.repositories.InventoryRepository - Fetching item details for stock ID: 1
2025-01-11 16:30:43 INFO  [pool-2-thread-2] org.example.db.DatabaseConnection - Attempting to establish the DB
2025-01-11 16:30:44 INFO  [pool-2-thread-2] org.example.db.DatabaseConnection - Database connection established successfully.
2025-01-11 16:30:44 INFO  [pool-2-thread-2] org.example.repositories.InventoryRepository - Successfully retrieved item details for stock ID: 1
2025-01-11 16:30:44 WARN  [pool-2-thread-2] org.example.services.InventoryService - No item details found for stock ID: 1
2025-01-11 16:30:44 INFO  [pool-2-thread-2] org.example.controllers.InventoryController - Sending response with status 200 and body: {"error":"Item not found for stock ID: 1"}
2025-01-11 16:30:44 INFO  [pool-2-thread-2] org.example.controllers.InventoryController - Response sent successfully
2025-01-11 16:32:19 INFO  [main] org.example.MainServer - Server is running on http://localhost:8080
2025-01-11 16:32:20 INFO  [pool-2-thread-2] org.example.controllers.InventoryController - Received request to fetch item details
2025-01-11 16:32:20 INFO  [pool-2-thread-2] org.example.controllers.InventoryController - Fetching details for stock ID: 1
2025-01-11 16:32:20 INFO  [pool-2-thread-2] org.example.services.InventoryService - Fetching item details from repository for stock ID: 1
2025-01-11 16:32:20 INFO  [pool-2-thread-2] org.example.repositories.InventoryRepository - Fetching item details for stock ID: 1
2025-01-11 16:32:20 INFO  [pool-2-thread-2] org.example.db.DatabaseConnection - Attempting to establish the DB
2025-01-11 16:32:21 INFO  [pool-2-thread-2] org.example.db.DatabaseConnection - Database connection established successfully.
2025-01-11 16:32:21 INFO  [pool-2-thread-2] org.example.repositories.InventoryRepository - Successfully retrieved item details for stock ID: 1
2025-01-11 16:32:21 WARN  [pool-2-thread-2] org.example.services.InventoryService - No item details found for stock ID: 1
2025-01-11 16:32:21 INFO  [pool-2-thread-2] org.example.controllers.InventoryController - Sending response with status 200 and body: {"error":"Item not found for stock ID: 1"}
2025-01-11 16:32:21 INFO  [pool-2-thread-2] org.example.controllers.InventoryController - Response sent successfully
2025-01-11 16:34:07 INFO  [pool-2-thread-4] org.example.controllers.InventoryController - Received request to fetch item details
2025-01-11 16:34:07 INFO  [pool-2-thread-4] org.example.controllers.InventoryController - Fetching details for stock ID: 1
2025-01-11 16:34:07 INFO  [pool-2-thread-4] org.example.services.InventoryService - Fetching item details from repository for stock ID: 1
2025-01-11 16:34:07 INFO  [pool-2-thread-4] org.example.repositories.InventoryRepository - Fetching item details for stock ID: 1
2025-01-11 16:34:07 INFO  [pool-2-thread-4] org.example.db.DatabaseConnection - Attempting to establish the DB
2025-01-11 16:34:07 INFO  [pool-2-thread-4] org.example.db.DatabaseConnection - Database connection established successfully.
2025-01-11 16:34:07 INFO  [pool-2-thread-4] org.example.repositories.InventoryRepository - Successfully retrieved item details for stock ID: 1
2025-01-11 16:34:07 INFO  [pool-2-thread-4] org.example.services.InventoryService - Successfully fetched item details for stock ID: 1
2025-01-11 16:34:07 INFO  [pool-2-thread-4] org.example.controllers.InventoryController - Sending response with status 200 and body: {"stockId":1,"productName":"M16 Rifle","productType":"Weapon","currentStatus":"Available","armoryLocation":"Main Armory 1","isCurrentlyAssigned":"No"}
2025-01-11 16:34:07 INFO  [pool-2-thread-4] org.example.controllers.InventoryController - Response sent successfully
2025-01-11 16:34:16 INFO  [pool-2-thread-5] org.example.controllers.InventoryController - Received request to fetch item details
2025-01-11 16:34:16 INFO  [pool-2-thread-5] org.example.controllers.InventoryController - Fetching details for stock ID: 2
2025-01-11 16:34:16 INFO  [pool-2-thread-5] org.example.services.InventoryService - Fetching item details from repository for stock ID: 2
2025-01-11 16:34:16 INFO  [pool-2-thread-5] org.example.repositories.InventoryRepository - Fetching item details for stock ID: 2
2025-01-11 16:34:16 INFO  [pool-2-thread-5] org.example.db.DatabaseConnection - Attempting to establish the DB
2025-01-11 16:34:16 INFO  [pool-2-thread-5] org.example.db.DatabaseConnection - Database connection established successfully.
2025-01-11 16:34:16 INFO  [pool-2-thread-5] org.example.repositories.InventoryRepository - Successfully retrieved item details for stock ID: 2
2025-01-11 16:34:16 INFO  [pool-2-thread-5] org.example.services.InventoryService - Successfully fetched item details for stock ID: 2
2025-01-11 16:34:16 INFO  [pool-2-thread-5] org.example.controllers.InventoryController - Sending response with status 200 and body: {"stockId":2,"productName":"M4 Carbine","productType":"Weapon","currentStatus":"Available","armoryLocation":"Main Armory 1","isCurrentlyAssigned":"No"}
2025-01-11 16:34:16 INFO  [pool-2-thread-5] org.example.controllers.InventoryController - Response sent successfully
2025-01-11 16:34:17 INFO  [pool-2-thread-6] org.example.controllers.InventoryController - Received request to fetch item details
2025-01-11 16:34:17 INFO  [pool-2-thread-6] org.example.controllers.InventoryController - Fetching details for stock ID: 3
2025-01-11 16:34:17 INFO  [pool-2-thread-6] org.example.services.InventoryService - Fetching item details from repository for stock ID: 3
2025-01-11 16:34:17 INFO  [pool-2-thread-6] org.example.repositories.InventoryRepository - Fetching item details for stock ID: 3
2025-01-11 16:34:17 INFO  [pool-2-thread-6] org.example.db.DatabaseConnection - Attempting to establish the DB
2025-01-11 16:34:17 INFO  [pool-2-thread-6] org.example.db.DatabaseConnection - Database connection established successfully.
2025-01-11 16:34:17 INFO  [pool-2-thread-6] org.example.repositories.InventoryRepository - Successfully retrieved item details for stock ID: 3
2025-01-11 16:34:17 INFO  [pool-2-thread-6] org.example.services.InventoryService - Successfully fetched item details for stock ID: 3
2025-01-11 16:34:17 INFO  [pool-2-thread-6] org.example.controllers.InventoryController - Sending response with status 200 and body: {"stockId":3,"productName":"5.56mm Rounds","productType":"Ammunition","currentStatus":"Available","armoryLocation":"Main Armory 2","isCurrentlyAssigned":"No"}
2025-01-11 16:34:17 INFO  [pool-2-thread-6] org.example.controllers.InventoryController - Response sent successfully
2025-01-11 16:34:20 INFO  [pool-2-thread-7] org.example.controllers.InventoryController - Received request to fetch item details
2025-01-11 16:34:20 INFO  [pool-2-thread-7] org.example.controllers.InventoryController - Fetching details for stock ID: 4
2025-01-11 16:34:20 INFO  [pool-2-thread-7] org.example.services.InventoryService - Fetching item details from repository for stock ID: 4
2025-01-11 16:34:20 INFO  [pool-2-thread-7] org.example.repositories.InventoryRepository - Fetching item details for stock ID: 4
2025-01-11 16:34:20 INFO  [pool-2-thread-7] org.example.db.DatabaseConnection - Attempting to establish the DB
2025-01-11 16:34:20 INFO  [pool-2-thread-7] org.example.db.DatabaseConnection - Database connection established successfully.
2025-01-11 16:34:20 INFO  [pool-2-thread-7] org.example.repositories.InventoryRepository - Successfully retrieved item details for stock ID: 4
2025-01-11 16:34:20 INFO  [pool-2-thread-7] org.example.services.InventoryService - Successfully fetched item details for stock ID: 4
2025-01-11 16:34:20 INFO  [pool-2-thread-7] org.example.controllers.InventoryController - Sending response with status 200 and body: {"stockId":4,"productName":"Kevlar Vest","productType":"Gear","currentStatus":"Assigned","armoryLocation":"Main Armory 3","isCurrentlyAssigned":"Yes","assignedTo":"John Doe","assignmentDate":"2025-01-11 16:33:40"}
2025-01-11 16:34:20 INFO  [pool-2-thread-7] org.example.controllers.InventoryController - Response sent successfully
2025-01-11 16:34:23 INFO  [pool-2-thread-8] org.example.controllers.InventoryController - Received request to fetch item details
2025-01-11 16:34:23 INFO  [pool-2-thread-8] org.example.controllers.InventoryController - Fetching details for stock ID: 2
2025-01-11 16:34:23 INFO  [pool-2-thread-8] org.example.services.InventoryService - Fetching item details from repository for stock ID: 2
2025-01-11 16:34:23 INFO  [pool-2-thread-8] org.example.repositories.InventoryRepository - Fetching item details for stock ID: 2
2025-01-11 16:34:23 INFO  [pool-2-thread-8] org.example.db.DatabaseConnection - Attempting to establish the DB
2025-01-11 16:34:23 INFO  [pool-2-thread-8] org.example.db.DatabaseConnection - Database connection established successfully.
2025-01-11 16:34:23 INFO  [pool-2-thread-8] org.example.repositories.InventoryRepository - Successfully retrieved item details for stock ID: 2
2025-01-11 16:34:23 INFO  [pool-2-thread-8] org.example.services.InventoryService - Successfully fetched item details for stock ID: 2
2025-01-11 16:34:23 INFO  [pool-2-thread-8] org.example.controllers.InventoryController - Sending response with status 200 and body: {"stockId":2,"productName":"M4 Carbine","productType":"Weapon","currentStatus":"Available","armoryLocation":"Main Armory 1","isCurrentlyAssigned":"No"}
2025-01-11 16:34:23 INFO  [pool-2-thread-8] org.example.controllers.InventoryController - Response sent successfully
2025-01-11 16:34:27 INFO  [pool-2-thread-9] org.example.controllers.InventoryController - Received request to fetch item details
2025-01-11 16:34:27 INFO  [pool-2-thread-9] org.example.controllers.InventoryController - Fetching details for stock ID: 4
2025-01-11 16:34:27 INFO  [pool-2-thread-9] org.example.services.InventoryService - Fetching item details from repository for stock ID: 4
2025-01-11 16:34:27 INFO  [pool-2-thread-9] org.example.repositories.InventoryRepository - Fetching item details for stock ID: 4
2025-01-11 16:34:27 INFO  [pool-2-thread-9] org.example.db.DatabaseConnection - Attempting to establish the DB
2025-01-11 16:34:27 INFO  [pool-2-thread-9] org.example.db.DatabaseConnection - Database connection established successfully.
2025-01-11 16:34:27 INFO  [pool-2-thread-9] org.example.repositories.InventoryRepository - Successfully retrieved item details for stock ID: 4
2025-01-11 16:34:27 INFO  [pool-2-thread-9] org.example.services.InventoryService - Successfully fetched item details for stock ID: 4
2025-01-11 16:34:27 INFO  [pool-2-thread-9] org.example.controllers.InventoryController - Sending response with status 200 and body: {"stockId":4,"productName":"Kevlar Vest","productType":"Gear","currentStatus":"Assigned","armoryLocation":"Main Armory 3","isCurrentlyAssigned":"Yes","assignedTo":"John Doe","assignmentDate":"2025-01-11 16:33:40"}
2025-01-11 16:34:27 INFO  [pool-2-thread-9] org.example.controllers.InventoryController - Response sent successfully
2025-01-11 16:59:47 INFO  [pool-2-thread-1] org.example.controllers.InventoryController - Received request to fetch item details
2025-01-11 16:59:47 ERROR [pool-2-thread-1] org.example.controllers.InventoryController - Invalid stock ID provided in request
java.lang.NumberFormatException: For input string: ""
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:67) ~[?:?]
	at java.lang.Integer.parseInt(Integer.java:565) ~[?:?]
	at java.lang.Integer.parseInt(Integer.java:685) ~[?:?]
	at org.example.controllers.InventoryController.getItemDetails(InventoryController.java:77) ~[classes/:?]
	at org.example.router.Router.lambda$wrap$1(Router.java:56) ~[classes/:?]
	at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:98) ~[jdk.httpserver:?]
	at sun.net.httpserver.AuthFilter.doFilter(AuthFilter.java:82) ~[jdk.httpserver:?]
	at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:101) ~[jdk.httpserver:?]
	at sun.net.httpserver.ServerImpl$Exchange$LinkHandler.handle(ServerImpl.java:873) ~[jdk.httpserver:?]
	at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:98) ~[jdk.httpserver:?]
	at sun.net.httpserver.ServerImpl$Exchange.run(ServerImpl.java:849) ~[jdk.httpserver:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[?:?]
	at java.lang.Thread.run(Thread.java:1575) [?:?]
2025-01-11 16:59:47 ERROR [pool-2-thread-1] org.example.controllers.InventoryController - Sending error response with status 400 and message: Invalid stock ID provided
2025-01-11 16:59:47 INFO  [pool-2-thread-1] org.example.controllers.InventoryController - Sending response with status 400 and body: {"error":"Invalid stock ID provided"}
2025-01-11 16:59:47 INFO  [pool-2-thread-1] org.example.controllers.InventoryController - Response sent successfully
2025-01-11 16:59:56 INFO  [pool-2-thread-2] org.example.controllers.InventoryController - Received request to fetch item details
2025-01-11 16:59:56 INFO  [pool-2-thread-2] org.example.controllers.InventoryController - Fetching details for stock ID: 4
2025-01-11 16:59:56 INFO  [pool-2-thread-2] org.example.services.InventoryService - Fetching item details from repository for stock ID: 4
2025-01-11 16:59:56 INFO  [pool-2-thread-2] org.example.repositories.InventoryRepository - Fetching item details for stock ID: 4
2025-01-11 16:59:56 INFO  [pool-2-thread-2] org.example.db.DatabaseConnection - Attempting to establish the DB
2025-01-11 16:59:56 INFO  [pool-2-thread-2] org.example.db.DatabaseConnection - Database connection established successfully.
2025-01-11 16:59:56 INFO  [pool-2-thread-2] org.example.repositories.InventoryRepository - Successfully retrieved item details for stock ID: 4
2025-01-11 16:59:56 INFO  [pool-2-thread-2] org.example.services.InventoryService - Successfully fetched item details for stock ID: 4
2025-01-11 16:59:56 INFO  [pool-2-thread-2] org.example.controllers.InventoryController - Sending response with status 200 and body: {"stockId":4,"productName":"Kevlar Vest","productType":"Gear","currentStatus":"Assigned","armoryLocation":"Main Armory 3","isCurrentlyAssigned":"Yes","assignedTo":"John Doe","assignmentDate":"2025-01-11 16:33:40"}
2025-01-11 16:59:56 INFO  [pool-2-thread-2] org.example.controllers.InventoryController - Response sent successfully
2025-01-11 16:59:59 INFO  [pool-2-thread-3] org.example.controllers.InventoryController - Received request to fetch item details
2025-01-11 16:59:59 INFO  [pool-2-thread-3] org.example.controllers.InventoryController - Fetching details for stock ID: 40
2025-01-11 16:59:59 INFO  [pool-2-thread-3] org.example.services.InventoryService - Fetching item details from repository for stock ID: 40
2025-01-11 16:59:59 INFO  [pool-2-thread-3] org.example.repositories.InventoryRepository - Fetching item details for stock ID: 40
2025-01-11 16:59:59 INFO  [pool-2-thread-3] org.example.db.DatabaseConnection - Attempting to establish the DB
2025-01-11 16:59:59 INFO  [pool-2-thread-3] org.example.db.DatabaseConnection - Database connection established successfully.
2025-01-11 16:59:59 INFO  [pool-2-thread-3] org.example.repositories.InventoryRepository - Successfully retrieved item details for stock ID: 40
2025-01-11 16:59:59 WARN  [pool-2-thread-3] org.example.services.InventoryService - No item details found for stock ID: 40
2025-01-11 16:59:59 INFO  [pool-2-thread-3] org.example.controllers.InventoryController - Sending response with status 200 and body: {"error":"Item not found for stock ID: 40"}
2025-01-11 16:59:59 INFO  [pool-2-thread-3] org.example.controllers.InventoryController - Response sent successfully
2025-01-11 17:00:04 INFO  [pool-2-thread-4] org.example.controllers.InventoryController - Received request to fetch item details
2025-01-11 17:00:04 INFO  [pool-2-thread-4] org.example.controllers.InventoryController - Fetching details for stock ID: 404
2025-01-11 17:00:04 INFO  [pool-2-thread-4] org.example.services.InventoryService - Fetching item details from repository for stock ID: 404
2025-01-11 17:00:04 INFO  [pool-2-thread-4] org.example.repositories.InventoryRepository - Fetching item details for stock ID: 404
2025-01-11 17:00:04 INFO  [pool-2-thread-4] org.example.db.DatabaseConnection - Attempting to establish the DB
2025-01-11 17:00:04 INFO  [pool-2-thread-4] org.example.db.DatabaseConnection - Database connection established successfully.
2025-01-11 17:00:04 INFO  [pool-2-thread-4] org.example.repositories.InventoryRepository - Successfully retrieved item details for stock ID: 404
2025-01-11 17:00:04 WARN  [pool-2-thread-4] org.example.services.InventoryService - No item details found for stock ID: 404
2025-01-11 17:00:04 INFO  [pool-2-thread-4] org.example.controllers.InventoryController - Sending response with status 200 and body: {"error":"Item not found for stock ID: 404"}
2025-01-11 17:00:04 INFO  [pool-2-thread-4] org.example.controllers.InventoryController - Response sent successfully
2025-01-11 17:00:08 INFO  [pool-2-thread-5] org.example.controllers.InventoryController - Received request to fetch item details
2025-01-11 17:00:08 ERROR [pool-2-thread-5] org.example.controllers.InventoryController - Invalid stock ID provided in request
java.lang.NumberFormatException: For input string: ""
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:67) ~[?:?]
	at java.lang.Integer.parseInt(Integer.java:565) ~[?:?]
	at java.lang.Integer.parseInt(Integer.java:685) ~[?:?]
	at org.example.controllers.InventoryController.getItemDetails(InventoryController.java:77) ~[classes/:?]
	at org.example.router.Router.lambda$wrap$1(Router.java:56) ~[classes/:?]
	at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:98) ~[jdk.httpserver:?]
	at sun.net.httpserver.AuthFilter.doFilter(AuthFilter.java:82) ~[jdk.httpserver:?]
	at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:101) ~[jdk.httpserver:?]
	at sun.net.httpserver.ServerImpl$Exchange$LinkHandler.handle(ServerImpl.java:873) ~[jdk.httpserver:?]
	at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:98) ~[jdk.httpserver:?]
	at sun.net.httpserver.ServerImpl$Exchange.run(ServerImpl.java:849) ~[jdk.httpserver:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[?:?]
	at java.lang.Thread.run(Thread.java:1575) [?:?]
2025-01-11 17:00:08 ERROR [pool-2-thread-5] org.example.controllers.InventoryController - Sending error response with status 400 and message: Invalid stock ID provided
2025-01-11 17:00:08 INFO  [pool-2-thread-5] org.example.controllers.InventoryController - Sending response with status 400 and body: {"error":"Invalid stock ID provided"}
2025-01-11 17:00:08 INFO  [pool-2-thread-5] org.example.controllers.InventoryController - Response sent successfully
2025-01-11 17:03:35 INFO  [pool-2-thread-7] org.example.controllers.InventoryController - Received request to fetch item details
2025-01-11 17:03:35 INFO  [pool-2-thread-7] org.example.controllers.InventoryController - Fetching details for stock ID: 2
2025-01-11 17:03:35 INFO  [pool-2-thread-7] org.example.services.InventoryService - Fetching item details from repository for stock ID: 2
2025-01-11 17:03:35 INFO  [pool-2-thread-7] org.example.repositories.InventoryRepository - Fetching item details for stock ID: 2
2025-01-11 17:03:35 INFO  [pool-2-thread-7] org.example.db.DatabaseConnection - Attempting to establish the DB
2025-01-11 17:03:35 INFO  [pool-2-thread-7] org.example.db.DatabaseConnection - Database connection established successfully.
2025-01-11 17:03:35 INFO  [pool-2-thread-7] org.example.repositories.InventoryRepository - Successfully retrieved item details for stock ID: 2
2025-01-11 17:03:35 INFO  [pool-2-thread-7] org.example.services.InventoryService - Successfully fetched item details for stock ID: 2
2025-01-11 17:03:35 INFO  [pool-2-thread-7] org.example.controllers.InventoryController - Sending response with status 200 and body: {"stockId":2,"productName":"M4 Carbine","productType":"Weapon","currentStatus":"Available","armoryLocation":"Main Armory 1","isCurrentlyAssigned":"No"}
2025-01-11 17:03:35 INFO  [pool-2-thread-7] org.example.controllers.InventoryController - Response sent successfully
2025-01-11 17:03:40 INFO  [pool-2-thread-8] org.example.controllers.InventoryController - Received request to get all inventory items
2025-01-11 17:03:40 INFO  [pool-2-thread-8] org.example.services.InventoryService - Starting process to fetch all inventory items from the database.
2025-01-11 17:03:40 INFO  [pool-2-thread-8] org.example.repositories.InventoryRepository - Attempting to retrieve all inventory items
2025-01-11 17:03:40 INFO  [pool-2-thread-8] org.example.db.DatabaseConnection - Attempting to establish the DB
2025-01-11 17:03:40 INFO  [pool-2-thread-8] org.example.db.DatabaseConnection - Database connection established successfully.
2025-01-11 17:03:40 ERROR [pool-2-thread-8] org.example.repositories.InventoryRepository - SQL Error while retrieving inventory: Unknown column 'ps.Status' in 'field list'
java.sql.SQLSyntaxErrorException: Unknown column 'ps.Status' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:972) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.CallableStatement.executeQuery(CallableStatement.java:891) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at org.example.repositories.InventoryRepository.findAll(InventoryRepository.java:21) ~[classes/:?]
	at org.example.services.InventoryService.getAllInventory(InventoryService.java:21) ~[classes/:?]
	at org.example.controllers.InventoryController.getAllInventory(InventoryController.java:26) ~[classes/:?]
	at org.example.router.Router.lambda$wrap$1(Router.java:56) ~[classes/:?]
	at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:98) ~[jdk.httpserver:?]
	at sun.net.httpserver.AuthFilter.doFilter(AuthFilter.java:82) ~[jdk.httpserver:?]
	at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:101) ~[jdk.httpserver:?]
	at sun.net.httpserver.ServerImpl$Exchange$LinkHandler.handle(ServerImpl.java:873) ~[jdk.httpserver:?]
	at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:98) ~[jdk.httpserver:?]
	at sun.net.httpserver.ServerImpl$Exchange.run(ServerImpl.java:849) ~[jdk.httpserver:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[?:?]
	at java.lang.Thread.run(Thread.java:1575) [?:?]
2025-01-11 17:03:40 INFO  [pool-2-thread-8] org.example.services.InventoryService - Successfully fetched 0 inventory item(s).
2025-01-11 17:03:40 INFO  [pool-2-thread-8] org.example.controllers.InventoryController - Successfully fetched all inventory items, responding with status 200
2025-01-11 17:03:40 INFO  [pool-2-thread-8] org.example.controllers.InventoryController - Sending response with status 200 and body: []
2025-01-11 17:03:40 INFO  [pool-2-thread-8] org.example.controllers.InventoryController - Response sent successfully
2025-01-11 17:05:07 INFO  [pool-2-thread-10] org.example.controllers.InventoryController - Received request to get all inventory items
2025-01-11 17:05:07 INFO  [pool-2-thread-10] org.example.services.InventoryService - Starting process to fetch all inventory items from the database.
2025-01-11 17:05:07 INFO  [pool-2-thread-10] org.example.repositories.InventoryRepository - Attempting to retrieve all inventory items
2025-01-11 17:05:07 INFO  [pool-2-thread-10] org.example.db.DatabaseConnection - Attempting to establish the DB
2025-01-11 17:05:07 INFO  [pool-2-thread-10] org.example.db.DatabaseConnection - Database connection established successfully.
2025-01-11 17:05:07 INFO  [pool-2-thread-10] org.example.repositories.InventoryRepository - Successfully retrieved 4 inventory items
2025-01-11 17:05:07 INFO  [pool-2-thread-10] org.example.services.InventoryService - Successfully fetched 4 inventory item(s).
2025-01-11 17:05:07 INFO  [pool-2-thread-10] org.example.controllers.InventoryController - Successfully fetched all inventory items, responding with status 200
2025-01-11 17:05:07 INFO  [pool-2-thread-10] org.example.controllers.InventoryController - Sending response with status 200 and body: [{"productName":"M16 Rifle","totalInStock":1,"totalAvailable":1,"totalUnderMaintenance":0,"totalAssigned":0},{"productName":"M4 Carbine","totalInStock":1,"totalAvailable":1,"totalUnderMaintenance":0,"totalAssigned":0},{"productName":"5.56mm Rounds","totalInStock":1,"totalAvailable":1,"totalUnderMaintenance":0,"totalAssigned":0},{"productName":"Kevlar Vest","totalInStock":1,"totalAvailable":0,"totalUnderMaintenance":0,"totalAssigned":1}]
2025-01-11 17:05:07 INFO  [pool-2-thread-10] org.example.controllers.InventoryController - Response sent successfully
2025-01-11 17:05:24 INFO  [pool-2-thread-1] org.example.controllers.LoginController - Received login request
2025-01-11 17:05:24 INFO  [pool-2-thread-1] org.example.services.LoginService - Processing login request for user: admin
2025-01-11 17:05:24 INFO  [pool-2-thread-1] org.example.repositories.LoginRepository - Attempting to log in user: admin
2025-01-11 17:05:24 INFO  [pool-2-thread-1] org.example.db.DatabaseConnection - Attempting to establish the DB
2025-01-11 17:05:24 INFO  [pool-2-thread-1] org.example.db.DatabaseConnection - Database connection established successfully.
2025-01-11 17:05:24 INFO  [pool-2-thread-1] org.example.services.LoginService - Login result for user admin: Login successful
2025-01-11 17:05:24 INFO  [pool-2-thread-1] org.example.controllers.LoginController - Sending response with status 200 and body: {"message":"Login successful"}
2025-01-11 17:05:24 INFO  [pool-2-thread-1] org.example.controllers.LoginController - Response sent successfully
2025-01-11 17:05:28 INFO  [pool-2-thread-2] org.example.controllers.LoginController - Received login request
2025-01-11 17:05:28 INFO  [pool-2-thread-2] org.example.services.LoginService - Processing login request for user: admin
2025-01-11 17:05:28 INFO  [pool-2-thread-2] org.example.repositories.LoginRepository - Attempting to log in user: admin
2025-01-11 17:05:28 INFO  [pool-2-thread-2] org.example.db.DatabaseConnection - Attempting to establish the DB
2025-01-11 17:05:28 INFO  [pool-2-thread-2] org.example.db.DatabaseConnection - Database connection established successfully.
2025-01-11 17:05:28 INFO  [pool-2-thread-2] org.example.services.LoginService - Login result for user admin: Invalid username or password
2025-01-11 17:05:28 INFO  [pool-2-thread-2] org.example.controllers.LoginController - Sending response with status 200 and body: {"message":"Invalid username or password"}
2025-01-11 17:05:28 INFO  [pool-2-thread-2] org.example.controllers.LoginController - Response sent successfully
2025-01-11 17:05:32 INFO  [pool-2-thread-3] org.example.controllers.LoginController - Received login request
2025-01-11 17:05:32 INFO  [pool-2-thread-3] org.example.services.LoginService - Processing login request for user: admin
2025-01-11 17:05:32 INFO  [pool-2-thread-3] org.example.repositories.LoginRepository - Attempting to log in user: admin
2025-01-11 17:05:32 INFO  [pool-2-thread-3] org.example.db.DatabaseConnection - Attempting to establish the DB
2025-01-11 17:05:32 INFO  [pool-2-thread-3] org.example.db.DatabaseConnection - Database connection established successfully.
2025-01-11 17:05:32 INFO  [pool-2-thread-3] org.example.services.LoginService - Login result for user admin: Login successful
2025-01-11 17:05:32 INFO  [pool-2-thread-3] org.example.controllers.LoginController - Sending response with status 200 and body: {"message":"Login successful"}
2025-01-11 17:05:32 INFO  [pool-2-thread-3] org.example.controllers.LoginController - Response sent successfully
2025-01-11 17:06:02 INFO  [pool-2-thread-4] org.example.controllers.AssignController - Received request to assign a product to a soldier
2025-01-11 17:06:02 INFO  [pool-2-thread-4] org.example.services.AssignService - Parsing request body to AssignmentEntity
2025-01-11 17:06:02 INFO  [pool-2-thread-4] org.example.services.AssignService - Parsed AssignmentEntity: AssignmentEntity{stockId=1, soldierId=2, assignmentDate=2025-01-09 12:00:00.0}
2025-01-11 17:06:02 INFO  [pool-2-thread-4] org.example.repositories.AssignRepository - Attempting to execute stored procedure to assign product
2025-01-11 17:06:02 INFO  [pool-2-thread-4] org.example.db.DatabaseConnection - Attempting to establish the DB
2025-01-11 17:06:02 INFO  [pool-2-thread-4] org.example.db.DatabaseConnection - Database connection established successfully.
2025-01-11 17:06:02 ERROR [pool-2-thread-4] org.example.repositories.AssignRepository - SQL error while executing stored procedure: Unknown column 'Status' in 'where clause'
java.sql.SQLSyntaxErrorException: Unknown column 'Status' in 'where clause'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:972) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.CallableStatement.executeQuery(CallableStatement.java:891) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at org.example.repositories.AssignRepository.assignProductToSoldier(AssignRepository.java:29) ~[classes/:?]
	at org.example.services.AssignService.assign(AssignService.java:37) ~[classes/:?]
	at org.example.controllers.AssignController.assign(AssignController.java:29) ~[classes/:?]
	at org.example.router.Router.lambda$wrap$1(Router.java:56) ~[classes/:?]
	at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:98) ~[jdk.httpserver:?]
	at sun.net.httpserver.AuthFilter.doFilter(AuthFilter.java:82) ~[jdk.httpserver:?]
	at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:101) ~[jdk.httpserver:?]
	at sun.net.httpserver.ServerImpl$Exchange$LinkHandler.handle(ServerImpl.java:873) ~[jdk.httpserver:?]
	at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:98) ~[jdk.httpserver:?]
	at sun.net.httpserver.ServerImpl$Exchange.run(ServerImpl.java:849) ~[jdk.httpserver:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[?:?]
	at java.lang.Thread.run(Thread.java:1575) [?:?]
2025-01-11 17:06:02 ERROR [pool-2-thread-4] org.example.controllers.AssignController - Error while assigning product: Error executing stored procedure
java.lang.RuntimeException: Error executing stored procedure
	at org.example.repositories.AssignRepository.assignProductToSoldier(AssignRepository.java:39) ~[classes/:?]
	at org.example.services.AssignService.assign(AssignService.java:37) ~[classes/:?]
	at org.example.controllers.AssignController.assign(AssignController.java:29) ~[classes/:?]
	at org.example.router.Router.lambda$wrap$1(Router.java:56) ~[classes/:?]
	at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:98) ~[jdk.httpserver:?]
	at sun.net.httpserver.AuthFilter.doFilter(AuthFilter.java:82) ~[jdk.httpserver:?]
	at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:101) ~[jdk.httpserver:?]
	at sun.net.httpserver.ServerImpl$Exchange$LinkHandler.handle(ServerImpl.java:873) ~[jdk.httpserver:?]
	at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:98) ~[jdk.httpserver:?]
	at sun.net.httpserver.ServerImpl$Exchange.run(ServerImpl.java:849) ~[jdk.httpserver:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[?:?]
	at java.lang.Thread.run(Thread.java:1575) [?:?]
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'Status' in 'where clause'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:972) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.CallableStatement.executeQuery(CallableStatement.java:891) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at org.example.repositories.AssignRepository.assignProductToSoldier(AssignRepository.java:29) ~[classes/:?]
	... 12 more
2025-01-11 17:06:02 ERROR [pool-2-thread-4] org.example.controllers.AssignController - Sending error response with status 500 and message: Internal server error occurred while assigning the product.
2025-01-11 17:06:02 INFO  [pool-2-thread-4] org.example.controllers.AssignController - Sending response with status 500 and body: {"error":"Internal server error occurred while assigning the product."}
2025-01-11 17:06:02 INFO  [pool-2-thread-4] org.example.controllers.AssignController - Response sent successfully
2025-01-11 17:07:17 INFO  [pool-2-thread-6] org.example.controllers.AssignController - Received request to assign a product to a soldier
2025-01-11 17:07:17 INFO  [pool-2-thread-6] org.example.services.AssignService - Parsing request body to AssignmentEntity
2025-01-11 17:07:17 INFO  [pool-2-thread-6] org.example.services.AssignService - Parsed AssignmentEntity: AssignmentEntity{stockId=1, soldierId=2, assignmentDate=2025-01-09 12:00:00.0}
2025-01-11 17:07:17 INFO  [pool-2-thread-6] org.example.repositories.AssignRepository - Attempting to execute stored procedure to assign product
2025-01-11 17:07:17 INFO  [pool-2-thread-6] org.example.db.DatabaseConnection - Attempting to establish the DB
2025-01-11 17:07:17 INFO  [pool-2-thread-6] org.example.db.DatabaseConnection - Database connection established successfully.
2025-01-11 17:07:17 INFO  [pool-2-thread-6] org.example.repositories.AssignRepository - Stored procedure executed successfully, result: Product successfully assigned to soldier.
2025-01-11 17:07:17 INFO  [pool-2-thread-6] org.example.services.AssignService - Result from repository: Product successfully assigned to soldier.
2025-01-11 17:07:17 INFO  [pool-2-thread-6] org.example.controllers.AssignController - Product assigned successfully, responding with status 201
2025-01-11 17:07:17 INFO  [pool-2-thread-6] org.example.controllers.AssignController - Sending response with status 201 and body: {"message":"Product successfully assigned to soldier."}
2025-01-11 17:07:17 INFO  [pool-2-thread-6] org.example.controllers.AssignController - Response sent successfully
2025-01-11 17:07:20 INFO  [pool-2-thread-7] org.example.controllers.AssignController - Received request to assign a product to a soldier
2025-01-11 17:07:20 INFO  [pool-2-thread-7] org.example.services.AssignService - Parsing request body to AssignmentEntity
2025-01-11 17:07:20 INFO  [pool-2-thread-7] org.example.services.AssignService - Parsed AssignmentEntity: AssignmentEntity{stockId=1, soldierId=2, assignmentDate=2025-01-09 12:00:00.0}
2025-01-11 17:07:20 INFO  [pool-2-thread-7] org.example.repositories.AssignRepository - Attempting to execute stored procedure to assign product
2025-01-11 17:07:20 INFO  [pool-2-thread-7] org.example.db.DatabaseConnection - Attempting to establish the DB
2025-01-11 17:07:20 INFO  [pool-2-thread-7] org.example.db.DatabaseConnection - Database connection established successfully.
2025-01-11 17:07:20 INFO  [pool-2-thread-7] org.example.repositories.AssignRepository - Stored procedure executed successfully, result: Error: Product is not available for assignment.
2025-01-11 17:07:20 INFO  [pool-2-thread-7] org.example.services.AssignService - Result from repository: Error: Product is not available for assignment.
2025-01-11 17:07:20 INFO  [pool-2-thread-7] org.example.controllers.AssignController - Product assigned successfully, responding with status 201
2025-01-11 17:07:20 INFO  [pool-2-thread-7] org.example.controllers.AssignController - Sending response with status 201 and body: {"message":"Error: Product is not available for assignment."}
2025-01-11 17:07:20 INFO  [pool-2-thread-7] org.example.controllers.AssignController - Response sent successfully
2025-01-11 18:16:49 INFO  [main] org.example.MainServer - Server is running on http://localhost:8080
2025-01-11 18:16:53 INFO  [pool-2-thread-1] org.example.controllers.InventoryController - Received request to get all inventory items
2025-01-11 18:16:53 INFO  [pool-2-thread-1] org.example.services.InventoryService - Starting process to fetch all inventory items from the database.
2025-01-11 18:16:53 INFO  [pool-2-thread-1] org.example.repositories.InventoryRepository - Attempting to retrieve all inventory items
2025-01-11 18:16:54 INFO  [pool-2-thread-1] org.example.db.DatabaseConnection - Attempting to establish the DB
2025-01-11 18:16:58 INFO  [pool-2-thread-1] org.example.db.DatabaseConnection - Database connection established successfully.
2025-01-11 18:16:58 INFO  [pool-2-thread-1] org.example.repositories.InventoryRepository - Successfully retrieved 4 inventory items
2025-01-11 18:16:58 INFO  [pool-2-thread-1] org.example.services.InventoryService - Successfully fetched 4 inventory item(s).
2025-01-11 18:16:58 INFO  [pool-2-thread-1] org.example.controllers.InventoryController - Successfully fetched all inventory items, responding with status 200
2025-01-11 18:16:58 INFO  [pool-2-thread-1] org.example.controllers.InventoryController - Sending response with status 200 and body: [{"productName":"M16 Rifle","totalInStock":1,"totalAvailable":0,"totalUnderMaintenance":0,"totalAssigned":1},{"productName":"M4 Carbine","totalInStock":1,"totalAvailable":1,"totalUnderMaintenance":0,"totalAssigned":0},{"productName":"5.56mm Rounds","totalInStock":1,"totalAvailable":1,"totalUnderMaintenance":0,"totalAssigned":0},{"productName":"Kevlar Vest","totalInStock":1,"totalAvailable":0,"totalUnderMaintenance":0,"totalAssigned":1}]
2025-01-11 18:16:58 INFO  [pool-2-thread-1] org.example.controllers.InventoryController - Response sent successfully
2025-01-11 18:16:59 INFO  [pool-2-thread-2] org.example.controllers.InventoryController - Received request to get all inventory items
2025-01-11 18:16:59 INFO  [pool-2-thread-2] org.example.services.InventoryService - Starting process to fetch all inventory items from the database.
2025-01-11 18:16:59 INFO  [pool-2-thread-2] org.example.repositories.InventoryRepository - Attempting to retrieve all inventory items
2025-01-11 18:16:59 INFO  [pool-2-thread-2] org.example.db.DatabaseConnection - Attempting to establish the DB
2025-01-11 18:17:00 INFO  [pool-2-thread-2] org.example.db.DatabaseConnection - Database connection established successfully.
2025-01-11 18:17:00 INFO  [pool-2-thread-2] org.example.repositories.InventoryRepository - Successfully retrieved 4 inventory items
2025-01-11 18:17:00 INFO  [pool-2-thread-2] org.example.services.InventoryService - Successfully fetched 4 inventory item(s).
2025-01-11 18:17:00 INFO  [pool-2-thread-2] org.example.controllers.InventoryController - Successfully fetched all inventory items, responding with status 200
2025-01-11 18:17:00 INFO  [pool-2-thread-2] org.example.controllers.InventoryController - Sending response with status 200 and body: [{"productName":"M16 Rifle","totalInStock":1,"totalAvailable":0,"totalUnderMaintenance":0,"totalAssigned":1},{"productName":"M4 Carbine","totalInStock":1,"totalAvailable":1,"totalUnderMaintenance":0,"totalAssigned":0},{"productName":"5.56mm Rounds","totalInStock":1,"totalAvailable":1,"totalUnderMaintenance":0,"totalAssigned":0},{"productName":"Kevlar Vest","totalInStock":1,"totalAvailable":0,"totalUnderMaintenance":0,"totalAssigned":1}]
2025-01-11 18:17:00 INFO  [pool-2-thread-2] org.example.controllers.InventoryController - Response sent successfully
2025-01-11 18:20:20 INFO  [pool-2-thread-3] org.example.controllers.InventoryController - Received request to get all inventory items
2025-01-11 18:20:20 INFO  [pool-2-thread-3] org.example.services.InventoryService - Starting process to fetch all inventory items from the database.
2025-01-11 18:20:20 INFO  [pool-2-thread-3] org.example.repositories.InventoryRepository - Attempting to retrieve all inventory items
2025-01-11 18:20:20 INFO  [pool-2-thread-3] org.example.db.DatabaseConnection - Attempting to establish the DB
2025-01-11 18:20:20 INFO  [pool-2-thread-3] org.example.db.DatabaseConnection - Database connection established successfully.
2025-01-11 18:20:20 INFO  [pool-2-thread-3] org.example.repositories.InventoryRepository - Successfully retrieved 4 inventory items
2025-01-11 18:20:20 INFO  [pool-2-thread-3] org.example.services.InventoryService - Successfully fetched 4 inventory item(s).
2025-01-11 18:20:20 INFO  [pool-2-thread-3] org.example.controllers.InventoryController - Successfully fetched all inventory items, responding with status 200
2025-01-11 18:20:20 INFO  [pool-2-thread-3] org.example.controllers.InventoryController - Sending response with status 200 and body: [{"productName":"M16 Rifle","totalInStock":1,"totalAvailable":0,"totalUnderMaintenance":0,"totalAssigned":1},{"productName":"M4 Carbine","totalInStock":1,"totalAvailable":1,"totalUnderMaintenance":0,"totalAssigned":0},{"productName":"5.56mm Rounds","totalInStock":1,"totalAvailable":1,"totalUnderMaintenance":0,"totalAssigned":0},{"productName":"Kevlar Vest","totalInStock":1,"totalAvailable":0,"totalUnderMaintenance":0,"totalAssigned":1}]
2025-01-11 18:20:20 INFO  [pool-2-thread-3] org.example.controllers.InventoryController - Response sent successfully
2025-01-11 18:27:07 INFO  [pool-2-thread-5] org.example.controllers.InventoryController - Received request to fetch item details
2025-01-11 18:27:07 INFO  [pool-2-thread-5] org.example.controllers.InventoryController - Fetching details for stock ID: 2
2025-01-11 18:27:07 INFO  [pool-2-thread-5] org.example.services.InventoryService - Fetching item details from repository for stock ID: 2
2025-01-11 18:27:07 INFO  [pool-2-thread-5] org.example.repositories.InventoryRepository - Fetching item details for stock ID: 2
2025-01-11 18:27:07 INFO  [pool-2-thread-5] org.example.db.DatabaseConnection - Attempting to establish the DB
2025-01-11 18:27:07 INFO  [pool-2-thread-5] org.example.db.DatabaseConnection - Database connection established successfully.
2025-01-11 18:27:07 INFO  [pool-2-thread-5] org.example.repositories.InventoryRepository - Successfully retrieved item details for stock ID: 2
2025-01-11 18:27:07 INFO  [pool-2-thread-5] org.example.services.InventoryService - Successfully fetched item details for stock ID: 2
2025-01-11 18:27:07 INFO  [pool-2-thread-5] org.example.controllers.InventoryController - Sending response with status 200 and body: {"stockId":2,"productName":"M4 Carbine","productType":"Weapon","currentStatus":"Available","armoryLocation":"Main Armory 1","isCurrentlyAssigned":"No"}
2025-01-11 18:27:07 INFO  [pool-2-thread-5] org.example.controllers.InventoryController - Response sent successfully
2025-01-11 18:27:12 INFO  [pool-2-thread-6] org.example.controllers.InventoryController - Received request to get all inventory items
2025-01-11 18:27:12 INFO  [pool-2-thread-6] org.example.services.InventoryService - Starting process to fetch all inventory items from the database.
2025-01-11 18:27:12 INFO  [pool-2-thread-6] org.example.repositories.InventoryRepository - Attempting to retrieve all inventory items
2025-01-11 18:27:12 INFO  [pool-2-thread-6] org.example.db.DatabaseConnection - Attempting to establish the DB
2025-01-11 18:27:12 INFO  [pool-2-thread-6] org.example.db.DatabaseConnection - Database connection established successfully.
2025-01-11 18:27:12 INFO  [pool-2-thread-6] org.example.repositories.InventoryRepository - Successfully retrieved 4 inventory items
2025-01-11 18:27:12 INFO  [pool-2-thread-6] org.example.services.InventoryService - Successfully fetched 4 inventory item(s).
2025-01-11 18:27:12 INFO  [pool-2-thread-6] org.example.controllers.InventoryController - Successfully fetched all inventory items, responding with status 200
2025-01-11 18:27:12 INFO  [pool-2-thread-6] org.example.controllers.InventoryController - Sending response with status 200 and body: [{"productName":"M16 Rifle","totalInStock":1,"totalAvailable":0,"totalUnderMaintenance":0,"totalAssigned":1},{"productName":"M4 Carbine","totalInStock":1,"totalAvailable":1,"totalUnderMaintenance":0,"totalAssigned":0},{"productName":"5.56mm Rounds","totalInStock":1,"totalAvailable":1,"totalUnderMaintenance":0,"totalAssigned":0},{"productName":"Kevlar Vest","totalInStock":1,"totalAvailable":0,"totalUnderMaintenance":0,"totalAssigned":1}]
2025-01-11 18:27:12 INFO  [pool-2-thread-6] org.example.controllers.InventoryController - Response sent successfully
2025-01-11 18:27:44 INFO  [pool-2-thread-7] org.example.controllers.AssignController - Received request to assign a product to a soldier
2025-01-11 18:27:44 INFO  [pool-2-thread-7] org.example.services.AssignService - Parsing request body to AssignmentEntity
2025-01-11 18:27:44 INFO  [pool-2-thread-7] org.example.services.AssignService - Parsed AssignmentEntity: AssignmentEntity{stockId=1, soldierId=2, assignmentDate=2025-01-09 12:00:00.0}
2025-01-11 18:27:44 INFO  [pool-2-thread-7] org.example.repositories.AssignRepository - Attempting to execute stored procedure to assign product
2025-01-11 18:27:44 INFO  [pool-2-thread-7] org.example.db.DatabaseConnection - Attempting to establish the DB
2025-01-11 18:27:44 INFO  [pool-2-thread-7] org.example.db.DatabaseConnection - Database connection established successfully.
2025-01-11 18:27:44 INFO  [pool-2-thread-7] org.example.repositories.AssignRepository - Stored procedure executed successfully, result: Error: Product is not available for assignment.
2025-01-11 18:27:44 INFO  [pool-2-thread-7] org.example.services.AssignService - Result from repository: Error: Product is not available for assignment.
2025-01-11 18:27:44 INFO  [pool-2-thread-7] org.example.controllers.AssignController - Product assigned successfully, responding with status 201
2025-01-11 18:27:44 INFO  [pool-2-thread-7] org.example.controllers.AssignController - Sending response with status 201 and body: {"message":"Error: Product is not available for assignment."}
2025-01-11 18:27:44 INFO  [pool-2-thread-7] org.example.controllers.AssignController - Response sent successfully
2025-01-11 18:27:51 INFO  [pool-2-thread-8] org.example.controllers.LoginController - Received login request
2025-01-11 18:27:51 INFO  [pool-2-thread-8] org.example.services.LoginService - Processing login request for user: admin
2025-01-11 18:27:51 INFO  [pool-2-thread-8] org.example.repositories.LoginRepository - Attempting to log in user: admin
2025-01-11 18:27:51 INFO  [pool-2-thread-8] org.example.db.DatabaseConnection - Attempting to establish the DB
2025-01-11 18:27:51 INFO  [pool-2-thread-8] org.example.db.DatabaseConnection - Database connection established successfully.
2025-01-11 18:27:51 INFO  [pool-2-thread-8] org.example.services.LoginService - Login result for user admin: Login successful
2025-01-11 18:27:51 INFO  [pool-2-thread-8] org.example.controllers.LoginController - Sending response with status 200 and body: {"message":"Login successful"}
2025-01-11 18:27:51 INFO  [pool-2-thread-8] org.example.controllers.LoginController - Response sent successfully
